apply plugin: 'com.android.application'
//第二步
apply plugin: 'org.greenrobot.greendao'
android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.lqs.kuaishou.kuaishou1801"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "armeabi", "armeabi-v7a"
        }
    }
    //友盟分享需要添加的开始
    buildTypes {
        debug {
            manifestPlaceholders = [
                    qqappid: ""
            ]
        }
        release {
            minifyEnabled true//将该值改成true代表着我们的release正式版本将会使用混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    qqappid: ""
            ]
        }
    }
    //友盟分享的结束

    //第四步，配置greenDao生成文件的目录
    greendao {
        schemaVersion 1
        daoPackage 'com.lqs.kuaishou.kuaishou1801.cache.dao'
        targetGenDir 'src/main/java'
    }


}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:design:28.0.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.0'
    // 必要rxjava2依赖
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // 必要rxandrroid依赖，切线程时需要用到
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    // 必要retrofit依赖
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    // 必要依赖，和Rxjava结合必须用到，下面会提到
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    // 必要依赖，解析json字符所用
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    //非必要依赖， log依赖，如果需要打印OkHttpLog需要添加
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    implementation 'com.google.code.gson:gson:2.7'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.github.bumptech.glide:glide:4.3.1'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'

    implementation project(':slidemenu')

    //greenDao第三步，添加依赖
    implementation 'org.greenrobot:greendao:3.2.2'



    //导入IJKVideoView播放器
    implementation 'com.dou361.ijkplayer:jjdxm-ijkplayer:1.0.5'


    //导入第三方Gsy播放器
    implementation('com.shuyu:gsyVideoPlayer-java:6.0.3') {
        exclude group: 'com.android.support'
    }
    //支付宝依赖
    implementation (name: 'alipaySdk-15.5.9-20181123210601', ext: 'aar')

    //集成腾讯云直播sdk
    implementation 'com.tencent.liteavsdk:LiteAVSDK_Smart:latest.release'


    //弹幕库导入
    implementation 'com.github.ctiao:DanmakuFlameMaster:0.9.25'


    //友盟推送
    //配置友盟退推送
    //PushSDK必须依赖基础组件库，所以需要加入对应依赖
    implementation 'com.umeng.umsdk:common:2.2.5'
//PushSDK必须依赖utdid库，所以需要加入对应依赖。支付宝aar已经引入该库，此处可以注掉.
    //implementation 'com.umeng.umsdk:utdid:1.1.5.3'
//PushSDK
    implementation 'com.umeng.umsdk:push:6.0.1'

    //友盟分享
    implementation  'com.umeng.umsdk:share-core:7.0.2'
    implementation  'com.umeng.umsdk:share-board:7.0.2'
    implementation  'com.umeng.umsdk:share-qq:7.0.2'
    implementation  'com.umeng.umsdk:share-wx:7.0.2'
    implementation  'com.umeng.umsdk:share-sina:7.0.2'
    implementation  'com.umeng.umsdk:share-alipay:7.0.2'
    implementation  'com.umeng.umsdk:share-dingding:7.0.2'
    //友盟统计
    implementation  'com.umeng.umsdk:analytics:8.0.0'
}
